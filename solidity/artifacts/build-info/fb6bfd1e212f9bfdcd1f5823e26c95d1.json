{
	"id": "fb6bfd1e212f9bfdcd1f5823e26c95d1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.0",
	"solcLongVersion": "0.6.0+commit.26b70077",
	"input": {
		"language": "Solidity",
		"sources": {
			"Auction.sol": {
				"content": "pragma solidity >=0.4.22 <=0.6.0;\r\n\r\ncontract BlindAuction {\r\n\r\n    struct Bid {\r\n        bytes32 blindedBid;\r\n        uint deposit;\r\n    }\r\n\r\n    enum Phase {\r\n        Init, Bidding, Reveal, Done\r\n    }\r\n    Phase public state = Phase.Init;\r\n\r\n    address payable beneficiary;\r\n    mapping(address=>Bid) bids;\r\n\r\n    address public highestBidder;\r\n    uint public highestBid = 0;\r\n\r\n    mapping(address=>uint) depositReturns;\r\n\r\n    modifier validPhase(Phase reqPhase) {\r\n        require(state == reqPhase);\r\n        _;\r\n    }\r\n\r\n    modifier onlyBeneficiary() {\r\n        require(msg.sender == beneficiary);\r\n        _;\r\n    }\r\n\r\n    constructor() public {    \r\n        beneficiary = msg.sender;\r\n        state = Phase.Bidding;\r\n    }\r\n\r\n    function changeState(Phase x) public onlyBeneficiary {\r\n        if(x < state) revert();\r\n        state = x;\r\n    }\r\n    \r\n    function bid(bytes32 blindBid) public payable validPhase(Phase.Bidding) {  \r\n        bids[msg.sender] = Bid({\r\n            blindedBid: blindBid,\r\n            deposit: msg.value\r\n        });\r\n    }\r\n    \r\n    function reveal(uint value, bytes32 secret) public validPhase(Phase.Reveal) {\r\n        uint refund = 0;\r\n            Bid storage bidToCheck = bids[msg.sender];\r\n            if (bidToCheck.blindedBid == keccak256(abi.encodePacked(value, secret))) {\r\n                refund += bidToCheck.deposit;\r\n                if (bidToCheck.deposit >= value) {\r\n                    if (placeBid(msg.sender, value))\r\n                        refund -= value;\r\n                }\r\n            }\r\n            \r\n        msg.sender.transfer(refund);\r\n    }\r\n\r\n    function placeBid(address bidder, uint value) internal returns (bool success) {\r\n        if (value <= highestBid) {\r\n            return false;\r\n        }\r\n        if (highestBidder != address(0)) {\r\n            depositReturns[highestBidder] += highestBid;\r\n        }\r\n        highestBid = value;\r\n        highestBidder = bidder;\r\n        return true;\r\n    }\r\n\r\n    function withdraw() public {   \r\n        uint amount = depositReturns[msg.sender];\r\n        require (amount > 0);\r\n        depositReturns[msg.sender] = 0;\r\n        msg.sender.transfer(amount);\r\n    }\r\n    \r\n    function auctionEnd() public validPhase(Phase.Done) {\r\n        beneficiary.transfer(highestBid);\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Auction.sol": {
				"BlindAuction": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "auctionEnd",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "blindBid",
									"type": "bytes32"
								}
							],
							"name": "bid",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "enum BlindAuction.Phase",
									"name": "x",
									"type": "uint8"
								}
							],
							"name": "changeState",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "highestBid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "highestBidder",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "secret",
									"type": "bytes32"
								}
							],
							"name": "reveal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "state",
							"outputs": [
								{
									"internalType": "enum BlindAuction.Phase",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Auction.sol\":37:2302  contract BlindAuction {\r... */\n  mstore(0x40, 0x80)\n    /* \"Auction.sol\":230:240  Phase.Init */\n  0x00\n    /* \"Auction.sol\":209:240  Phase public state = Phase.Init */\n  dup1\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Auction.sol\":378:379  0 */\n  0x00\n    /* \"Auction.sol\":353:379  uint public highestBid = 0 */\n  0x03\n  sstore\n    /* \"Auction.sol\":635:735  constructor() public {    \r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_2:\n    /* \"Auction.sol\":635:735  constructor() public {    \r... */\n  pop\n    /* \"Auction.sol\":685:695  msg.sender */\n  caller\n    /* \"Auction.sol\":671:682  beneficiary */\n  0x00\n  0x01\n    /* \"Auction.sol\":671:695  beneficiary = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Auction.sol\":714:727  Phase.Bidding */\n  0x01\n    /* \"Auction.sol\":706:711  state */\n  0x00\n  dup1\n    /* \"Auction.sol\":706:727  state = Phase.Bidding */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_5\n  jumpi\n  invalid\ntag_5:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Auction.sol\":37:2302  contract BlindAuction {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Auction.sol\":37:2302  contract BlindAuction {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x91f90157\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x91f90157\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x957bb1e0\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc19d93fb\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xd57bde79\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_10:\n      dup1\n      0x268f1153\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x2a24f46c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4036778f\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Auction.sol\":743:857  function changeState(Phase x) public onlyBeneficiary {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n        /* \"Auction.sol\":743:857  function changeState(Phase x) public onlyBeneficiary {\r... */\n      pop\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n        /* \"Auction.sol\":743:857  function changeState(Phase x) public onlyBeneficiary {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_14\n      jump\t// in\n    tag_12:\n      stop\n        /* \"Auction.sol\":2196:2299  function auctionEnd() public validPhase(Phase.Done) {\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"Auction.sol\":2196:2299  function auctionEnd() public validPhase(Phase.Done) {\r... */\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      stop\n        /* \"Auction.sol\":1985:2184  function withdraw() public {   \r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_18:\n        /* \"Auction.sol\":1985:2184  function withdraw() public {   \r... */\n      pop\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      stop\n        /* \"Auction.sol\":1077:1612  function reveal(uint value, bytes32 secret) public validPhase(Phase.Reveal) {\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_21:\n        /* \"Auction.sol\":1077:1612  function reveal(uint value, bytes32 secret) public validPhase(Phase.Reveal) {\r... */\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_23:\n        /* \"Auction.sol\":1077:1612  function reveal(uint value, bytes32 secret) public validPhase(Phase.Reveal) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_24\n      jump\t// in\n    tag_22:\n      stop\n        /* \"Auction.sol\":318:346  address public highestBidder */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_25:\n        /* \"Auction.sol\":318:346  address public highestBidder */\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Auction.sol\":869:1065  function bid(bytes32 blindBid) public payable validPhase(Phase.Bidding) {  \r... */\n    tag_7:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_29:\n        /* \"Auction.sol\":869:1065  function bid(bytes32 blindBid) public payable validPhase(Phase.Bidding) {  \r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_30\n      jump\t// in\n    tag_28:\n      stop\n        /* \"Auction.sol\":209:240  Phase public state = Phase.Init */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_31:\n        /* \"Auction.sol\":209:240  Phase public state = Phase.Init */\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      0x03\n      dup2\n      gt\n      iszero\n      tag_34\n      jumpi\n      invalid\n    tag_34:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Auction.sol\":353:379  uint public highestBid = 0 */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_35\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_35:\n        /* \"Auction.sol\":353:379  uint public highestBid = 0 */\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Auction.sol\":743:857  function changeState(Phase x) public onlyBeneficiary {\r... */\n    tag_14:\n        /* \"Auction.sol\":595:606  beneficiary */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Auction.sol\":581:606  msg.sender == beneficiary */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Auction.sol\":581:591  msg.sender */\n      caller\n        /* \"Auction.sol\":581:606  msg.sender == beneficiary */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Auction.sol\":573:607  require(msg.sender == beneficiary) */\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n        /* \"Auction.sol\":814:819  state */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Auction.sol\":810:819  x < state */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_41\n      jumpi\n      invalid\n    tag_41:\n        /* \"Auction.sol\":810:811  x */\n      dup2\n        /* \"Auction.sol\":810:819  x < state */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_42\n      jumpi\n      invalid\n    tag_42:\n      lt\n        /* \"Auction.sol\":807:829  if(x < state) revert() */\n      iszero\n      tag_43\n      jumpi\n        /* \"Auction.sol\":821:829  revert() */\n      0x00\n      dup1\n      revert\n        /* \"Auction.sol\":807:829  if(x < state) revert() */\n    tag_43:\n        /* \"Auction.sol\":848:849  x */\n      dup1\n        /* \"Auction.sol\":840:845  state */\n      0x00\n      dup1\n        /* \"Auction.sol\":840:849  state = x */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_44\n      jumpi\n      invalid\n    tag_44:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Auction.sol\":743:857  function changeState(Phase x) public onlyBeneficiary {\r... */\n      pop\n      jump\t// out\n        /* \"Auction.sol\":2196:2299  function auctionEnd() public validPhase(Phase.Done) {\r... */\n    tag_17:\n        /* \"Auction.sol\":2236:2246  Phase.Done */\n      0x03\n        /* \"Auction.sol\":498:506  reqPhase */\n      dup1\n        /* \"Auction.sol\":489:506  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_46\n      jumpi\n      invalid\n    tag_46:\n        /* \"Auction.sol\":489:494  state */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Auction.sol\":489:506  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_47\n      jumpi\n      invalid\n    tag_47:\n      eq\n        /* \"Auction.sol\":481:507  require(state == reqPhase) */\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n        /* \"Auction.sol\":2259:2270  beneficiary */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Auction.sol\":2259:2279  beneficiary.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Auction.sol\":2259:2291  beneficiary.transfer(highestBid) */\n      0x08fc\n        /* \"Auction.sol\":2280:2290  highestBid */\n      sload(0x03)\n        /* \"Auction.sol\":2259:2291  beneficiary.transfer(highestBid) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_51:\n        /* \"Auction.sol\":2259:2291  beneficiary.transfer(highestBid) */\n      pop\n        /* \"Auction.sol\":2196:2299  function auctionEnd() public validPhase(Phase.Done) {\r... */\n      pop\n      jump\t// out\n        /* \"Auction.sol\":1985:2184  function withdraw() public {   \r... */\n    tag_20:\n        /* \"Auction.sol\":2026:2037  uint amount */\n      0x00\n        /* \"Auction.sol\":2040:2054  depositReturns */\n      0x04\n        /* \"Auction.sol\":2040:2066  depositReturns[msg.sender] */\n      0x00\n        /* \"Auction.sol\":2055:2065  msg.sender */\n      caller\n        /* \"Auction.sol\":2040:2066  depositReturns[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Auction.sol\":2026:2066  uint amount = depositReturns[msg.sender] */\n      swap1\n      pop\n        /* \"Auction.sol\":2095:2096  0 */\n      0x00\n        /* \"Auction.sol\":2086:2092  amount */\n      dup2\n        /* \"Auction.sol\":2086:2096  amount > 0 */\n      gt\n        /* \"Auction.sol\":2077:2097  require (amount > 0) */\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n        /* \"Auction.sol\":2137:2138  0 */\n      0x00\n        /* \"Auction.sol\":2108:2122  depositReturns */\n      0x04\n        /* \"Auction.sol\":2108:2134  depositReturns[msg.sender] */\n      0x00\n        /* \"Auction.sol\":2123:2133  msg.sender */\n      caller\n        /* \"Auction.sol\":2108:2134  depositReturns[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Auction.sol\":2108:2138  depositReturns[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Auction.sol\":2149:2159  msg.sender */\n      caller\n        /* \"Auction.sol\":2149:2168  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Auction.sol\":2149:2176  msg.sender.transfer(amount) */\n      0x08fc\n        /* \"Auction.sol\":2169:2175  amount */\n      dup3\n        /* \"Auction.sol\":2149:2176  msg.sender.transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_55\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_55:\n        /* \"Auction.sol\":2149:2176  msg.sender.transfer(amount) */\n      pop\n        /* \"Auction.sol\":1985:2184  function withdraw() public {   \r... */\n      pop\n      jump\t// out\n        /* \"Auction.sol\":1077:1612  function reveal(uint value, bytes32 secret) public validPhase(Phase.Reveal) {\r... */\n    tag_24:\n        /* \"Auction.sol\":1139:1151  Phase.Reveal */\n      0x02\n        /* \"Auction.sol\":498:506  reqPhase */\n      dup1\n        /* \"Auction.sol\":489:506  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_57\n      jumpi\n      invalid\n    tag_57:\n        /* \"Auction.sol\":489:494  state */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Auction.sol\":489:506  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_58\n      jumpi\n      invalid\n    tag_58:\n      eq\n        /* \"Auction.sol\":481:507  require(state == reqPhase) */\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n        /* \"Auction.sol\":1164:1175  uint refund */\n      0x00\n        /* \"Auction.sol\":1178:1179  0 */\n      dup1\n        /* \"Auction.sol\":1164:1179  uint refund = 0 */\n      swap1\n      pop\n        /* \"Auction.sol\":1194:1216  Bid storage bidToCheck */\n      0x00\n        /* \"Auction.sol\":1219:1223  bids */\n      0x01\n        /* \"Auction.sol\":1219:1235  bids[msg.sender] */\n      0x00\n        /* \"Auction.sol\":1224:1234  msg.sender */\n      caller\n        /* \"Auction.sol\":1219:1235  bids[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Auction.sol\":1194:1235  Bid storage bidToCheck = bids[msg.sender] */\n      swap1\n      pop\n        /* \"Auction.sol\":1306:1311  value */\n      dup5\n        /* \"Auction.sol\":1313:1319  secret */\n      dup5\n        /* \"Auction.sol\":1289:1320  abi.encodePacked(value, secret) */\n      add(0x20, mload(0x40))\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"Auction.sol\":1289:1320  abi.encodePacked(value, secret) */\n      swap1\n      0x40\n      mstore\n        /* \"Auction.sol\":1279:1321  keccak256(abi.encodePacked(value, secret)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"Auction.sol\":1254:1264  bidToCheck */\n      dup2\n        /* \"Auction.sol\":1254:1275  bidToCheck.blindedBid */\n      0x00\n      add\n      sload\n        /* \"Auction.sol\":1254:1321  bidToCheck.blindedBid == keccak256(abi.encodePacked(value, secret)) */\n      eq\n        /* \"Auction.sol\":1250:1553  if (bidToCheck.blindedBid == keccak256(abi.encodePacked(value, secret))) {\r... */\n      iszero\n      tag_61\n      jumpi\n        /* \"Auction.sol\":1352:1362  bidToCheck */\n      dup1\n        /* \"Auction.sol\":1352:1370  bidToCheck.deposit */\n      0x01\n      add\n      sload\n        /* \"Auction.sol\":1342:1370  refund += bidToCheck.deposit */\n      dup3\n      add\n      swap2\n      pop\n        /* \"Auction.sol\":1415:1420  value */\n      dup5\n        /* \"Auction.sol\":1393:1403  bidToCheck */\n      dup2\n        /* \"Auction.sol\":1393:1411  bidToCheck.deposit */\n      0x01\n      add\n      sload\n        /* \"Auction.sol\":1393:1420  bidToCheck.deposit >= value */\n      lt\n        /* \"Auction.sol\":1389:1538  if (bidToCheck.deposit >= value) {\r... */\n      tag_62\n      jumpi\n        /* \"Auction.sol\":1449:1476  placeBid(msg.sender, value) */\n      tag_63\n        /* \"Auction.sol\":1458:1468  msg.sender */\n      caller\n        /* \"Auction.sol\":1470:1475  value */\n      dup7\n        /* \"Auction.sol\":1449:1457  placeBid */\n      tag_64\n        /* \"Auction.sol\":1449:1476  placeBid(msg.sender, value) */\n      jump\t// in\n    tag_63:\n        /* \"Auction.sol\":1445:1518  if (placeBid(msg.sender, value))\r... */\n      iszero\n      tag_65\n      jumpi\n        /* \"Auction.sol\":1513:1518  value */\n      dup5\n        /* \"Auction.sol\":1503:1518  refund -= value */\n      dup3\n      sub\n      swap2\n      pop\n        /* \"Auction.sol\":1445:1518  if (placeBid(msg.sender, value))\r... */\n    tag_65:\n        /* \"Auction.sol\":1389:1538  if (bidToCheck.deposit >= value) {\r... */\n    tag_62:\n        /* \"Auction.sol\":1250:1553  if (bidToCheck.blindedBid == keccak256(abi.encodePacked(value, secret))) {\r... */\n    tag_61:\n        /* \"Auction.sol\":1577:1587  msg.sender */\n      caller\n        /* \"Auction.sol\":1577:1596  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Auction.sol\":1577:1604  msg.sender.transfer(refund) */\n      0x08fc\n        /* \"Auction.sol\":1597:1603  refund */\n      dup4\n        /* \"Auction.sol\":1577:1604  msg.sender.transfer(refund) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_67\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_67:\n        /* \"Auction.sol\":1577:1604  msg.sender.transfer(refund) */\n      pop\n        /* \"Auction.sol\":518:519  _ */\n      pop\n      pop\n        /* \"Auction.sol\":1077:1612  function reveal(uint value, bytes32 secret) public validPhase(Phase.Reveal) {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Auction.sol\":318:346  address public highestBidder */\n    tag_27:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Auction.sol\":869:1065  function bid(bytes32 blindBid) public payable validPhase(Phase.Bidding) {  \r... */\n    tag_30:\n        /* \"Auction.sol\":926:939  Phase.Bidding */\n      0x01\n        /* \"Auction.sol\":498:506  reqPhase */\n      dup1\n        /* \"Auction.sol\":489:506  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_69\n      jumpi\n      invalid\n    tag_69:\n        /* \"Auction.sol\":489:494  state */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Auction.sol\":489:506  state == reqPhase */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_70\n      jumpi\n      invalid\n    tag_70:\n      eq\n        /* \"Auction.sol\":481:507  require(state == reqPhase) */\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n        /* \"Auction.sol\":973:1057  Bid({\r... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Auction.sol\":1004:1012  blindBid */\n      dup4\n        /* \"Auction.sol\":973:1057  Bid({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Auction.sol\":1036:1045  msg.value */\n      callvalue\n        /* \"Auction.sol\":973:1057  Bid({\r... */\n      dup2\n      mstore\n      pop\n        /* \"Auction.sol\":954:958  bids */\n      0x01\n        /* \"Auction.sol\":954:970  bids[msg.sender] */\n      0x00\n        /* \"Auction.sol\":959:969  msg.sender */\n      caller\n        /* \"Auction.sol\":954:970  bids[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Auction.sol\":954:1057  bids[msg.sender] = Bid({\r... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"Auction.sol\":869:1065  function bid(bytes32 blindBid) public payable validPhase(Phase.Bidding) {  \r... */\n      pop\n      pop\n      jump\t// out\n        /* \"Auction.sol\":209:240  Phase public state = Phase.Init */\n    tag_33:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Auction.sol\":353:379  uint public highestBid = 0 */\n    tag_37:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"Auction.sol\":1620:1977  function placeBid(address bidder, uint value) internal returns (bool success) {\r... */\n    tag_64:\n        /* \"Auction.sol\":1684:1696  bool success */\n      0x00\n        /* \"Auction.sol\":1722:1732  highestBid */\n      sload(0x03)\n        /* \"Auction.sol\":1713:1718  value */\n      dup3\n        /* \"Auction.sol\":1713:1732  value <= highestBid */\n      gt\n        /* \"Auction.sol\":1709:1773  if (value <= highestBid) {\r... */\n      tag_74\n      jumpi\n        /* \"Auction.sol\":1756:1761  false */\n      0x00\n        /* \"Auction.sol\":1749:1761  return false */\n      swap1\n      pop\n      jump(tag_73)\n        /* \"Auction.sol\":1709:1773  if (value <= highestBid) {\r... */\n    tag_74:\n        /* \"Auction.sol\":1812:1813  0 */\n      0x00\n        /* \"Auction.sol\":1787:1814  highestBidder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Auction.sol\":1787:1800  highestBidder */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Auction.sol\":1787:1814  highestBidder != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Auction.sol\":1783:1886  if (highestBidder != address(0)) {\r... */\n      tag_75\n      jumpi\n        /* \"Auction.sol\":1864:1874  highestBid */\n      sload(0x03)\n        /* \"Auction.sol\":1831:1845  depositReturns */\n      0x04\n        /* \"Auction.sol\":1831:1860  depositReturns[highestBidder] */\n      0x00\n        /* \"Auction.sol\":1846:1859  highestBidder */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Auction.sol\":1831:1860  depositReturns[highestBidder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Auction.sol\":1831:1874  depositReturns[highestBidder] += highestBid */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Auction.sol\":1783:1886  if (highestBidder != address(0)) {\r... */\n    tag_75:\n        /* \"Auction.sol\":1909:1914  value */\n      dup2\n        /* \"Auction.sol\":1896:1906  highestBid */\n      0x03\n        /* \"Auction.sol\":1896:1914  highestBid = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Auction.sol\":1941:1947  bidder */\n      dup3\n        /* \"Auction.sol\":1925:1938  highestBidder */\n      0x02\n      0x00\n        /* \"Auction.sol\":1925:1947  highestBidder = bidder */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Auction.sol\":1965:1969  true */\n      0x01\n        /* \"Auction.sol\":1958:1969  return true */\n      swap1\n      pop\n        /* \"Auction.sol\":1620:1977  function placeBid(address bidder, uint value) internal returns (bool success) {\r... */\n    tag_73:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208fc8ddc0d42841f092b0fd28b4ef6626ab1f1281ef0d397fab0003f446ff6a7364736f6c63430006000033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260008060006101000a81548160ff0219169083600381111561002257fe5b0217905550600060035534801561003857600080fd5b5033600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016000806101000a81548160ff0219169083600381111561009857fe5b02179055506107bb806100ac6000396000f3fe60806040526004361061007b5760003560e01c806391f901571161004e57806391f9015714610131578063957bb1e014610188578063c19d93fb146101b6578063d57bde79146101ef5761007b565b8063268f1153146100805780632a24f46c146100be5780633ccfd60b146100d55780634036778f146100ec575b600080fd5b34801561008c57600080fd5b506100bc600480360360208110156100a357600080fd5b81019080803560ff16906020019092919050505061021a565b005b3480156100ca57600080fd5b506100d36102ca565b005b3480156100e157600080fd5b506100ea61036a565b005b3480156100f857600080fd5b5061012f6004803603604081101561010f57600080fd5b81019080803590602001909291908035906020019092919050505061044a565b005b34801561013d57600080fd5b50610146610577565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101b46004803603602081101561019e57600080fd5b810190808035906020019092919050505061059d565b005b3480156101c257600080fd5b506101cb61063e565b604051808260038111156101db57fe5b60ff16815260200191505060405180910390f35b3480156101fb57600080fd5b50610204610650565b6040518082815260200191505060405180910390f35b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027457600080fd5b6000809054906101000a900460ff16600381111561028e57fe5b81600381111561029a57fe5b10156102a557600080fd5b806000806101000a81548160ff021916908360038111156102c257fe5b021790555050565b60038060038111156102d857fe5b6000809054906101000a900460ff1660038111156102f257fe5b146102fc57600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f19350505050158015610366573d6000803e3d6000fd5b5050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116103bb57600080fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610446573d6000803e3d6000fd5b5050565b600280600381111561045857fe5b6000809054906101000a900460ff16600381111561047257fe5b1461047c57600080fd5b60008090506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905084846040516020018083815260200182815260200192505050604051602081830303815290604052805190602001208160000154141561052957806001015482019150848160010154106105285761051c3386610656565b156105275784820391505b5b5b3373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561056f573d6000803e3d6000fd5b505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018060038111156105ab57fe5b6000809054906101000a900460ff1660038111156105c557fe5b146105cf57600080fd5b604051806040016040528083815260200134815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101559050505050565b6000809054906101000a900460ff1681565b60035481565b6000600354821161066a576000905061077f565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107325760035460046000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8160038190555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190505b9291505056fea26469706673582212208fc8ddc0d42841f092b0fd28b4ef6626ab1f1281ef0d397fab0003f446ff6a7364736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x22 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x98 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x7BB DUP1 PUSH2 0xAC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91F90157 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x91F90157 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x957BB1E0 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xD57BDE79 EQ PUSH2 0x1EF JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x268F1153 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x2A24F46C EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x4036778F EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x21A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x2CA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEA PUSH2 0x36A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x44A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x59D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1DB JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x204 PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x28E JUMPI INVALID JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x29A JUMPI INVALID JUMPDEST LT ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2C2 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2D8 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F2 JUMPI INVALID JUMPDEST EQ PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x3 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x366 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x446 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x458 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x472 JUMPI INVALID JUMPDEST EQ PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x529 JUMPI DUP1 PUSH1 0x1 ADD SLOAD DUP3 ADD SWAP2 POP DUP5 DUP2 PUSH1 0x1 ADD SLOAD LT PUSH2 0x528 JUMPI PUSH2 0x51C CALLER DUP7 PUSH2 0x656 JUMP JUMPDEST ISZERO PUSH2 0x527 JUMPI DUP5 DUP3 SUB SWAP2 POP JUMPDEST JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x56F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5AB JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5C5 JUMPI INVALID JUMPDEST EQ PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD CALLVALUE DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 GT PUSH2 0x66A JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x77F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x732 JUMPI PUSH1 0x3 SLOAD PUSH1 0x4 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xC8 0xDD 0xC0 0xD4 0x28 COINBASE CREATE SWAP3 0xB0 REVERT 0x28 0xB4 0xEF PUSH7 0x26AB1F1281EF0D CODECOPY PUSH32 0xAB0003F446FF6A7364736F6C6343000600003300000000000000000000000000 ",
							"sourceMap": "37:2265:0:-:0;;;230:10;209:31;;;;;;;;;;;;;;;;;;;;;;;;;;378:1;353:26;;635:100;8:9:-1;5:2;;;30:1;27;20:12;5:2;635:100:0;685:10;671:11;;:24;;;;;;;;;;;;;;;;;;714:13;706:5;;:21;;;;;;;;;;;;;;;;;;;;;;;;37:2265;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061007b5760003560e01c806391f901571161004e57806391f9015714610131578063957bb1e014610188578063c19d93fb146101b6578063d57bde79146101ef5761007b565b8063268f1153146100805780632a24f46c146100be5780633ccfd60b146100d55780634036778f146100ec575b600080fd5b34801561008c57600080fd5b506100bc600480360360208110156100a357600080fd5b81019080803560ff16906020019092919050505061021a565b005b3480156100ca57600080fd5b506100d36102ca565b005b3480156100e157600080fd5b506100ea61036a565b005b3480156100f857600080fd5b5061012f6004803603604081101561010f57600080fd5b81019080803590602001909291908035906020019092919050505061044a565b005b34801561013d57600080fd5b50610146610577565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101b46004803603602081101561019e57600080fd5b810190808035906020019092919050505061059d565b005b3480156101c257600080fd5b506101cb61063e565b604051808260038111156101db57fe5b60ff16815260200191505060405180910390f35b3480156101fb57600080fd5b50610204610650565b6040518082815260200191505060405180910390f35b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461027457600080fd5b6000809054906101000a900460ff16600381111561028e57fe5b81600381111561029a57fe5b10156102a557600080fd5b806000806101000a81548160ff021916908360038111156102c257fe5b021790555050565b60038060038111156102d857fe5b6000809054906101000a900460ff1660038111156102f257fe5b146102fc57600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f19350505050158015610366573d6000803e3d6000fd5b5050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081116103bb57600080fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610446573d6000803e3d6000fd5b5050565b600280600381111561045857fe5b6000809054906101000a900460ff16600381111561047257fe5b1461047c57600080fd5b60008090506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905084846040516020018083815260200182815260200192505050604051602081830303815290604052805190602001208160000154141561052957806001015482019150848160010154106105285761051c3386610656565b156105275784820391505b5b5b3373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561056f573d6000803e3d6000fd5b505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018060038111156105ab57fe5b6000809054906101000a900460ff1660038111156105c557fe5b146105cf57600080fd5b604051806040016040528083815260200134815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101559050505050565b6000809054906101000a900460ff1681565b60035481565b6000600354821161066a576000905061077f565b600073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107325760035460046000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8160038190555082600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190505b9291505056fea26469706673582212208fc8ddc0d42841f092b0fd28b4ef6626ab1f1281ef0d397fab0003f446ff6a7364736f6c63430006000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91F90157 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x91F90157 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x957BB1E0 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0xC19D93FB EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0xD57BDE79 EQ PUSH2 0x1EF JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x268F1153 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x2A24F46C EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x4036778F EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x21A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD3 PUSH2 0x2CA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEA PUSH2 0x36A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x44A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x146 PUSH2 0x577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x59D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CB PUSH2 0x63E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1DB JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x204 PUSH2 0x650 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x274 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x28E JUMPI INVALID JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x29A JUMPI INVALID JUMPDEST LT ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2C2 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2D8 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F2 JUMPI INVALID JUMPDEST EQ PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x3 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x366 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x446 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x458 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x472 JUMPI INVALID JUMPDEST EQ PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x529 JUMPI DUP1 PUSH1 0x1 ADD SLOAD DUP3 ADD SWAP2 POP DUP5 DUP2 PUSH1 0x1 ADD SLOAD LT PUSH2 0x528 JUMPI PUSH2 0x51C CALLER DUP7 PUSH2 0x656 JUMP JUMPDEST ISZERO PUSH2 0x527 JUMPI DUP5 DUP3 SUB SWAP2 POP JUMPDEST JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x56F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5AB JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5C5 JUMPI INVALID JUMPDEST EQ PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD CALLVALUE DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE SWAP1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 GT PUSH2 0x66A JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x77F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x732 JUMPI PUSH1 0x3 SLOAD PUSH1 0x4 PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xC8 0xDD 0xC0 0xD4 0x28 COINBASE CREATE SWAP3 0xB0 REVERT 0x28 0xB4 0xEF PUSH7 0x26AB1F1281EF0D CODECOPY PUSH32 0xAB0003F446FF6A7364736F6C6343000600003300000000000000000000000000 ",
							"sourceMap": "37:2265:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;743:114;;8:9:-1;5:2;;;30:1;27;20:12;5:2;743:114:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;743:114:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;2196:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2196:103:0;;;:::i;:::-;;1985:199;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1985:199:0;;;:::i;:::-;;1077:535;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1077:535:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1077:535:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;318:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;318:28:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;869:196;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;869:196:0;;;;;;;;;;;;;;;;;:::i;:::-;;209:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;209:31:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;353:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;353:26:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;743:114;595:11;;;;;;;;;;;581:25;;:10;:25;;;573:34;;;;;;814:5:::1;::::0;::::1;;;;;;;;;810:9;;;;;;;;:1;:9;;;;;;;;;807:22;;;821:8;::::0;::::1;807:22;848:1;840:5;::::0;:9:::1;;;;;;;;;;;;;;;;;;;;;;;;743:114:::0;:::o;2196:103::-;2236:10;498:8;489:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;481:26;;;;;;2259:11:::1;;;;;;;;;;;:20;;:32;2280:10;;2259:32;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;2259:32:0;2196:103:::0;:::o;1985:199::-;2026:11;2040:14;:26;2055:10;2040:26;;;;;;;;;;;;;;;;2026:40;;2095:1;2086:6;:10;2077:20;;;;;;2137:1;2108:14;:26;2123:10;2108:26;;;;;;;;;;;;;;;:30;;;;2149:10;:19;;:27;2169:6;2149:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2149:27:0;1985:199;:::o;1077:535::-;1139:12;498:8;489:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;481:26;;;;;;1164:11:::1;1178:1:::0;1164:15:::1;;1194:22;1219:4;:16;1224:10;1219:16;;;;;;;;;;;;;;;1194:41;;1306:5;1313:6;1289:31;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1289:31:0;;;1279:42;;;;;;1254:10;:21;;;:67;1250:303;;;1352:10;:18;;;1342:28;;;;1415:5;1393:10;:18;;;:27;1389:149;;1449:27;1458:10;1470:5;1449:8;:27::i;:::-;1445:73;;;1513:5;1503:15;;;;1445:73;1389:149;1250:303;1577:10;:19;;:27;1597:6;1577:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39::::0;24:38:::1;77:16;74:1;67:27;5:2;1577:27:0;518:1;;1077:535:::0;;;:::o;318:28::-;;;;;;;;;;;;;:::o;869:196::-;926:13;498:8;489:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;481:26;;;;;;973:84:::1;;;;;;;;1004:8;973:84;;;;1036:9;973:84;;::::0;954:4:::1;:16;959:10;954:16;;;;;;;;;;;;;;;:103;;;;;;;;;;;;;;;;;;;869:196:::0;;:::o;209:31::-;;;;;;;;;;;;;:::o;353:26::-;;;;:::o;1620:357::-;1684:12;1722:10;;1713:5;:19;1709:64;;1756:5;1749:12;;;;1709:64;1812:1;1787:27;;:13;;;;;;;;;;;:27;;;1783:103;;1864:10;;1831:14;:29;1846:13;;;;;;;;;;;1831:29;;;;;;;;;;;;;;;;:43;;;;;;;;;;;1783:103;1909:5;1896:10;:18;;;;1941:6;1925:13;;:22;;;;;;;;;;;;;;;;;;1965:4;1958:11;;1620:357;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "395800",
								"executionCost": "68126",
								"totalCost": "463926"
							},
							"external": {
								"auctionEnd()": "infinite",
								"bid(bytes32)": "41341",
								"changeState(uint8)": "22956",
								"highestBid()": "1071",
								"highestBidder()": "1053",
								"reveal(uint256,bytes32)": "infinite",
								"state()": "1117",
								"withdraw()": "infinite"
							},
							"internal": {
								"placeBid(address,uint256)": "65171"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 37,
									"end": 2302,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 37,
									"end": 2302,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 37,
									"end": 2302,
									"name": "MSTORE"
								},
								{
									"begin": 230,
									"end": 240,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "DUP1"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "EXP"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "DUP2"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "SLOAD"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "DUP2"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "MUL"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "NOT"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "AND"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "SWAP1"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "DUP4"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "DUP2"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "GT"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "ISZERO"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "JUMPI"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "INVALID"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "JUMPDEST"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "MUL"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "OR"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "SWAP1"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "SSTORE"
								},
								{
									"begin": 209,
									"end": 240,
									"name": "POP"
								},
								{
									"begin": 378,
									"end": 379,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 353,
									"end": 379,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 353,
									"end": 379,
									"name": "SSTORE"
								},
								{
									"begin": 635,
									"end": 735,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 635,
									"end": 735,
									"name": "POP"
								},
								{
									"begin": 685,
									"end": 695,
									"name": "CALLER"
								},
								{
									"begin": 671,
									"end": 682,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 671,
									"end": 682,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 671,
									"end": 695,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 671,
									"end": 695,
									"name": "EXP"
								},
								{
									"begin": 671,
									"end": 695,
									"name": "DUP2"
								},
								{
									"begin": 671,
									"end": 695,
									"name": "SLOAD"
								},
								{
									"begin": 671,
									"end": 695,
									"name": "DUP2"
								},
								{
									"begin": 671,
									"end": 695,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 671,
									"end": 695,
									"name": "MUL"
								},
								{
									"begin": 671,
									"end": 695,
									"name": "NOT"
								},
								{
									"begin": 671,
									"end": 695,
									"name": "AND"
								},
								{
									"begin": 671,
									"end": 695,
									"name": "SWAP1"
								},
								{
									"begin": 671,
									"end": 695,
									"name": "DUP4"
								},
								{
									"begin": 671,
									"end": 695,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 671,
									"end": 695,
									"name": "AND"
								},
								{
									"begin": 671,
									"end": 695,
									"name": "MUL"
								},
								{
									"begin": 671,
									"end": 695,
									"name": "OR"
								},
								{
									"begin": 671,
									"end": 695,
									"name": "SWAP1"
								},
								{
									"begin": 671,
									"end": 695,
									"name": "SSTORE"
								},
								{
									"begin": 671,
									"end": 695,
									"name": "POP"
								},
								{
									"begin": 714,
									"end": 727,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 706,
									"end": 711,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 706,
									"end": 711,
									"name": "DUP1"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "EXP"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "DUP2"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "SLOAD"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "DUP2"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "MUL"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "NOT"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "AND"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "SWAP1"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "DUP4"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "DUP2"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "GT"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "ISZERO"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "JUMPI"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "INVALID"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "JUMPDEST"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "MUL"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "OR"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "SWAP1"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "SSTORE"
								},
								{
									"begin": 706,
									"end": 727,
									"name": "POP"
								},
								{
									"begin": 37,
									"end": 2302,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 37,
									"end": 2302,
									"name": "DUP1"
								},
								{
									"begin": 37,
									"end": 2302,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 37,
									"end": 2302,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 37,
									"end": 2302,
									"name": "CODECOPY"
								},
								{
									"begin": 37,
									"end": 2302,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 37,
									"end": 2302,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208fc8ddc0d42841f092b0fd28b4ef6626ab1f1281ef0d397fab0003f446ff6a7364736f6c63430006000033",
									".code": [
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "MSTORE"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "LT"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "JUMPI"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "SHR"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "DUP1"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH",
											"value": "91F90157"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "GT"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "JUMPI"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "DUP1"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH",
											"value": "91F90157"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "EQ"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "JUMPI"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "DUP1"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH",
											"value": "957BB1E0"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "EQ"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "JUMPI"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "DUP1"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH",
											"value": "C19D93FB"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "EQ"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "JUMPI"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "DUP1"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH",
											"value": "D57BDE79"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "EQ"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "JUMPI"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "JUMP"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "JUMPDEST"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "DUP1"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH",
											"value": "268F1153"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "EQ"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "JUMPI"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "DUP1"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH",
											"value": "2A24F46C"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "EQ"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "JUMPI"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "DUP1"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH",
											"value": "3CCFD60B"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "EQ"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "JUMPI"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "DUP1"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH",
											"value": "4036778F"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "EQ"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "JUMPI"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "JUMPDEST"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "DUP1"
										},
										{
											"begin": 37,
											"end": 2302,
											"name": "REVERT"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "JUMPDEST"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "POP"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "DUP1"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "DUP2"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "ADD"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "SWAP1"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "DUP1"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "DUP1"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "AND"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "SWAP1"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "ADD"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "SWAP1"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "SWAP3"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "SWAP2"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "SWAP1"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "POP"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "POP"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "POP"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "JUMPDEST"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "STOP"
										},
										{
											"begin": 2196,
											"end": 2299,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 2196,
											"end": 2299,
											"name": "JUMPDEST"
										},
										{
											"begin": 2196,
											"end": 2299,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2196,
											"end": 2299,
											"name": "POP"
										},
										{
											"begin": 2196,
											"end": 2299,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2196,
											"end": 2299,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 2196,
											"end": 2299,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2196,
											"end": 2299,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2196,
											"end": 2299,
											"name": "JUMPDEST"
										},
										{
											"begin": 2196,
											"end": 2299,
											"name": "STOP"
										},
										{
											"begin": 1985,
											"end": 2184,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1985,
											"end": 2184,
											"name": "JUMPDEST"
										},
										{
											"begin": 1985,
											"end": 2184,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1985,
											"end": 2184,
											"name": "POP"
										},
										{
											"begin": 1985,
											"end": 2184,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1985,
											"end": 2184,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1985,
											"end": 2184,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1985,
											"end": 2184,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1985,
											"end": 2184,
											"name": "JUMPDEST"
										},
										{
											"begin": 1985,
											"end": 2184,
											"name": "STOP"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "JUMPDEST"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "POP"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "DUP1"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "DUP2"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "ADD"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "SWAP1"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "DUP1"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "DUP1"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "SWAP1"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "ADD"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "SWAP1"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "SWAP3"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "SWAP2"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "SWAP1"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "DUP1"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "SWAP1"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "ADD"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "SWAP1"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "SWAP3"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "SWAP2"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "SWAP1"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "POP"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "POP"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "POP"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "JUMPDEST"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "STOP"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "POP"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "MLOAD"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "DUP3"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "AND"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "AND"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "DUP2"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "MSTORE"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "ADD"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "SWAP2"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "POP"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "POP"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "MLOAD"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "DUP1"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "SWAP2"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "SUB"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "SWAP1"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "RETURN"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "JUMPDEST"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "DUP1"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "DUP2"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "ADD"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "SWAP1"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "DUP1"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "DUP1"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "SWAP1"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "ADD"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "SWAP1"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "SWAP3"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "SWAP2"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "SWAP1"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "POP"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "POP"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "POP"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "JUMPDEST"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "STOP"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "JUMPDEST"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "POP"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "JUMPDEST"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "MLOAD"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "DUP1"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "DUP3"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "DUP2"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "GT"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "ISZERO"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "JUMPI"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "INVALID"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "JUMPDEST"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "AND"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "DUP2"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "MSTORE"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "ADD"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "SWAP2"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "POP"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "POP"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "MLOAD"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "DUP1"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "SWAP2"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "SUB"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "SWAP1"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "RETURN"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "JUMPDEST"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "POP"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "JUMPDEST"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "MLOAD"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "DUP1"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "DUP3"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "DUP2"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "MSTORE"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "ADD"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "SWAP2"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "POP"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "POP"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "MLOAD"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "DUP1"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "SWAP2"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "SUB"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "SWAP1"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "RETURN"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "JUMPDEST"
										},
										{
											"begin": 595,
											"end": 606,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 595,
											"end": 606,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 595,
											"end": 606,
											"name": "SWAP1"
										},
										{
											"begin": 595,
											"end": 606,
											"name": "SLOAD"
										},
										{
											"begin": 595,
											"end": 606,
											"name": "SWAP1"
										},
										{
											"begin": 595,
											"end": 606,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 595,
											"end": 606,
											"name": "EXP"
										},
										{
											"begin": 595,
											"end": 606,
											"name": "SWAP1"
										},
										{
											"begin": 595,
											"end": 606,
											"name": "DIV"
										},
										{
											"begin": 595,
											"end": 606,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 595,
											"end": 606,
											"name": "AND"
										},
										{
											"begin": 581,
											"end": 606,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 581,
											"end": 606,
											"name": "AND"
										},
										{
											"begin": 581,
											"end": 591,
											"name": "CALLER"
										},
										{
											"begin": 581,
											"end": 606,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 581,
											"end": 606,
											"name": "AND"
										},
										{
											"begin": 581,
											"end": 606,
											"name": "EQ"
										},
										{
											"begin": 573,
											"end": 607,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 573,
											"end": 607,
											"name": "JUMPI"
										},
										{
											"begin": 573,
											"end": 607,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 573,
											"end": 607,
											"name": "DUP1"
										},
										{
											"begin": 573,
											"end": 607,
											"name": "REVERT"
										},
										{
											"begin": 573,
											"end": 607,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 573,
											"end": 607,
											"name": "JUMPDEST"
										},
										{
											"begin": 814,
											"end": 819,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 814,
											"end": 819,
											"name": "DUP1"
										},
										{
											"begin": 814,
											"end": 819,
											"name": "SWAP1"
										},
										{
											"begin": 814,
											"end": 819,
											"name": "SLOAD"
										},
										{
											"begin": 814,
											"end": 819,
											"name": "SWAP1"
										},
										{
											"begin": 814,
											"end": 819,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 814,
											"end": 819,
											"name": "EXP"
										},
										{
											"begin": 814,
											"end": 819,
											"name": "SWAP1"
										},
										{
											"begin": 814,
											"end": 819,
											"name": "DIV"
										},
										{
											"begin": 814,
											"end": 819,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 814,
											"end": 819,
											"name": "AND"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "DUP2"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "GT"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "ISZERO"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "JUMPI"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "INVALID"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "JUMPDEST"
										},
										{
											"begin": 810,
											"end": 811,
											"name": "DUP2"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "DUP2"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "GT"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "ISZERO"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "JUMPI"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "INVALID"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "JUMPDEST"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "LT"
										},
										{
											"begin": 807,
											"end": 829,
											"name": "ISZERO"
										},
										{
											"begin": 807,
											"end": 829,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 807,
											"end": 829,
											"name": "JUMPI"
										},
										{
											"begin": 821,
											"end": 829,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 821,
											"end": 829,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 829,
											"name": "REVERT"
										},
										{
											"begin": 807,
											"end": 829,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 807,
											"end": 829,
											"name": "JUMPDEST"
										},
										{
											"begin": 848,
											"end": 849,
											"name": "DUP1"
										},
										{
											"begin": 840,
											"end": 845,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 840,
											"end": 845,
											"name": "DUP1"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "EXP"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "SLOAD"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "MUL"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "NOT"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "AND"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "DUP4"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "DUP2"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "GT"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "ISZERO"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "JUMPI"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "INVALID"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "JUMPDEST"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "MUL"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "OR"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "SWAP1"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "SSTORE"
										},
										{
											"begin": 840,
											"end": 849,
											"name": "POP"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "POP"
										},
										{
											"begin": 743,
											"end": 857,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2196,
											"end": 2299,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 2196,
											"end": 2299,
											"name": "JUMPDEST"
										},
										{
											"begin": 2236,
											"end": 2246,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 498,
											"end": 506,
											"name": "DUP1"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "DUP2"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "GT"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "ISZERO"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "JUMPI"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "INVALID"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "JUMPDEST"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "DUP1"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "SWAP1"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "SLOAD"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "SWAP1"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "EXP"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "SWAP1"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "DIV"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "AND"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "DUP2"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "GT"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "ISZERO"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "JUMPI"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "INVALID"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "JUMPDEST"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "EQ"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "JUMPI"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "DUP1"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "REVERT"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "JUMPDEST"
										},
										{
											"begin": 2259,
											"end": 2270,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2270,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2259,
											"end": 2270,
											"name": "SWAP1"
										},
										{
											"begin": 2259,
											"end": 2270,
											"name": "SLOAD"
										},
										{
											"begin": 2259,
											"end": 2270,
											"name": "SWAP1"
										},
										{
											"begin": 2259,
											"end": 2270,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2259,
											"end": 2270,
											"name": "EXP"
										},
										{
											"begin": 2259,
											"end": 2270,
											"name": "SWAP1"
										},
										{
											"begin": 2259,
											"end": 2270,
											"name": "DIV"
										},
										{
											"begin": 2259,
											"end": 2270,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2259,
											"end": 2270,
											"name": "AND"
										},
										{
											"begin": 2259,
											"end": 2279,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2259,
											"end": 2279,
											"name": "AND"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 2280,
											"end": 2290,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2280,
											"end": 2290,
											"name": "SLOAD"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "SWAP1"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "DUP2"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "ISZERO"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "MUL"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "SWAP1"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "MLOAD"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "MLOAD"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "DUP1"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "DUP4"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "SUB"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "DUP2"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "DUP6"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "DUP9"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "DUP9"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "CALL"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "SWAP4"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "POP"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "POP"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "POP"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "POP"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2259,
											"end": 2291,
											"name": "POP"
										},
										{
											"begin": 2196,
											"end": 2299,
											"name": "POP"
										},
										{
											"begin": 2196,
											"end": 2299,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1985,
											"end": 2184,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1985,
											"end": 2184,
											"name": "JUMPDEST"
										},
										{
											"begin": 2026,
											"end": 2037,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2054,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2065,
											"name": "CALLER"
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "AND"
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "AND"
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "DUP2"
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "MSTORE"
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "ADD"
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "SWAP1"
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "DUP2"
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "MSTORE"
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "ADD"
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "KECCAK256"
										},
										{
											"begin": 2040,
											"end": 2066,
											"name": "SLOAD"
										},
										{
											"begin": 2026,
											"end": 2066,
											"name": "SWAP1"
										},
										{
											"begin": 2026,
											"end": 2066,
											"name": "POP"
										},
										{
											"begin": 2095,
											"end": 2096,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2092,
											"name": "DUP2"
										},
										{
											"begin": 2086,
											"end": 2096,
											"name": "GT"
										},
										{
											"begin": 2077,
											"end": 2097,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 2077,
											"end": 2097,
											"name": "JUMPI"
										},
										{
											"begin": 2077,
											"end": 2097,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2077,
											"end": 2097,
											"name": "DUP1"
										},
										{
											"begin": 2077,
											"end": 2097,
											"name": "REVERT"
										},
										{
											"begin": 2077,
											"end": 2097,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 2077,
											"end": 2097,
											"name": "JUMPDEST"
										},
										{
											"begin": 2137,
											"end": 2138,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2133,
											"name": "CALLER"
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "AND"
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "AND"
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "DUP2"
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "MSTORE"
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "ADD"
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "SWAP1"
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "DUP2"
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "MSTORE"
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "ADD"
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2134,
											"name": "KECCAK256"
										},
										{
											"begin": 2108,
											"end": 2138,
											"name": "DUP2"
										},
										{
											"begin": 2108,
											"end": 2138,
											"name": "SWAP1"
										},
										{
											"begin": 2108,
											"end": 2138,
											"name": "SSTORE"
										},
										{
											"begin": 2108,
											"end": 2138,
											"name": "POP"
										},
										{
											"begin": 2149,
											"end": 2159,
											"name": "CALLER"
										},
										{
											"begin": 2149,
											"end": 2168,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2149,
											"end": 2168,
											"name": "AND"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "SWAP1"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "DUP2"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "ISZERO"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "MUL"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "SWAP1"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "MLOAD"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "MLOAD"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "DUP1"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "DUP4"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "SUB"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "DUP2"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "DUP6"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "DUP9"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "DUP9"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "CALL"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "SWAP4"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "POP"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "POP"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "POP"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "POP"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2149,
											"end": 2176,
											"name": "POP"
										},
										{
											"begin": 1985,
											"end": 2184,
											"name": "POP"
										},
										{
											"begin": 1985,
											"end": 2184,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "JUMPDEST"
										},
										{
											"begin": 1139,
											"end": 1151,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 498,
											"end": 506,
											"name": "DUP1"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "DUP2"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "GT"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "ISZERO"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "JUMPI"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "INVALID"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "JUMPDEST"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "DUP1"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "SWAP1"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "SLOAD"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "SWAP1"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "EXP"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "SWAP1"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "DIV"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "AND"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "DUP2"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "GT"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "ISZERO"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "JUMPI"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "INVALID"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "JUMPDEST"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "EQ"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "JUMPI"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "DUP1"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "REVERT"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "JUMPDEST"
										},
										{
											"begin": 1164,
											"end": 1175,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1178,
											"end": 1179,
											"name": "DUP1"
										},
										{
											"begin": 1164,
											"end": 1179,
											"name": "SWAP1"
										},
										{
											"begin": 1164,
											"end": 1179,
											"name": "POP"
										},
										{
											"begin": 1194,
											"end": 1216,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1223,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1219,
											"end": 1235,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1224,
											"end": 1234,
											"name": "CALLER"
										},
										{
											"begin": 1219,
											"end": 1235,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1219,
											"end": 1235,
											"name": "AND"
										},
										{
											"begin": 1219,
											"end": 1235,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1219,
											"end": 1235,
											"name": "AND"
										},
										{
											"begin": 1219,
											"end": 1235,
											"name": "DUP2"
										},
										{
											"begin": 1219,
											"end": 1235,
											"name": "MSTORE"
										},
										{
											"begin": 1219,
											"end": 1235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1235,
											"name": "ADD"
										},
										{
											"begin": 1219,
											"end": 1235,
											"name": "SWAP1"
										},
										{
											"begin": 1219,
											"end": 1235,
											"name": "DUP2"
										},
										{
											"begin": 1219,
											"end": 1235,
											"name": "MSTORE"
										},
										{
											"begin": 1219,
											"end": 1235,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1235,
											"name": "ADD"
										},
										{
											"begin": 1219,
											"end": 1235,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1235,
											"name": "KECCAK256"
										},
										{
											"begin": 1194,
											"end": 1235,
											"name": "SWAP1"
										},
										{
											"begin": 1194,
											"end": 1235,
											"name": "POP"
										},
										{
											"begin": 1306,
											"end": 1311,
											"name": "DUP5"
										},
										{
											"begin": 1313,
											"end": 1319,
											"name": "DUP5"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "MLOAD"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "ADD"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "DUP1"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "DUP4"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "DUP2"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "MSTORE"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "ADD"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "DUP3"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "DUP2"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "MSTORE"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "ADD"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "SWAP3"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "POP"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "POP"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "POP"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "SWAP1"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1320,
											"name": "MSTORE"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "DUP1"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "MLOAD"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "SWAP1"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "ADD"
										},
										{
											"begin": 1279,
											"end": 1321,
											"name": "KECCAK256"
										},
										{
											"begin": 1254,
											"end": 1264,
											"name": "DUP2"
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "ADD"
										},
										{
											"begin": 1254,
											"end": 1275,
											"name": "SLOAD"
										},
										{
											"begin": 1254,
											"end": 1321,
											"name": "EQ"
										},
										{
											"begin": 1250,
											"end": 1553,
											"name": "ISZERO"
										},
										{
											"begin": 1250,
											"end": 1553,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 1250,
											"end": 1553,
											"name": "JUMPI"
										},
										{
											"begin": 1352,
											"end": 1362,
											"name": "DUP1"
										},
										{
											"begin": 1352,
											"end": 1370,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1352,
											"end": 1370,
											"name": "ADD"
										},
										{
											"begin": 1352,
											"end": 1370,
											"name": "SLOAD"
										},
										{
											"begin": 1342,
											"end": 1370,
											"name": "DUP3"
										},
										{
											"begin": 1342,
											"end": 1370,
											"name": "ADD"
										},
										{
											"begin": 1342,
											"end": 1370,
											"name": "SWAP2"
										},
										{
											"begin": 1342,
											"end": 1370,
											"name": "POP"
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "DUP5"
										},
										{
											"begin": 1393,
											"end": 1403,
											"name": "DUP2"
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "ADD"
										},
										{
											"begin": 1393,
											"end": 1411,
											"name": "SLOAD"
										},
										{
											"begin": 1393,
											"end": 1420,
											"name": "LT"
										},
										{
											"begin": 1389,
											"end": 1538,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 1389,
											"end": 1538,
											"name": "JUMPI"
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 1458,
											"end": 1468,
											"name": "CALLER"
										},
										{
											"begin": 1470,
											"end": 1475,
											"name": "DUP7"
										},
										{
											"begin": 1449,
											"end": 1457,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 1449,
											"end": 1476,
											"name": "JUMPDEST"
										},
										{
											"begin": 1445,
											"end": 1518,
											"name": "ISZERO"
										},
										{
											"begin": 1445,
											"end": 1518,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 1445,
											"end": 1518,
											"name": "JUMPI"
										},
										{
											"begin": 1513,
											"end": 1518,
											"name": "DUP5"
										},
										{
											"begin": 1503,
											"end": 1518,
											"name": "DUP3"
										},
										{
											"begin": 1503,
											"end": 1518,
											"name": "SUB"
										},
										{
											"begin": 1503,
											"end": 1518,
											"name": "SWAP2"
										},
										{
											"begin": 1503,
											"end": 1518,
											"name": "POP"
										},
										{
											"begin": 1445,
											"end": 1518,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 1445,
											"end": 1518,
											"name": "JUMPDEST"
										},
										{
											"begin": 1389,
											"end": 1538,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 1389,
											"end": 1538,
											"name": "JUMPDEST"
										},
										{
											"begin": 1250,
											"end": 1553,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 1250,
											"end": 1553,
											"name": "JUMPDEST"
										},
										{
											"begin": 1577,
											"end": 1587,
											"name": "CALLER"
										},
										{
											"begin": 1577,
											"end": 1596,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1577,
											"end": 1596,
											"name": "AND"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1597,
											"end": 1603,
											"name": "DUP4"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "SWAP1"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "DUP2"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "ISZERO"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "MUL"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "SWAP1"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "MLOAD"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "MLOAD"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "DUP1"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "DUP4"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "SUB"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "DUP2"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "DUP6"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "DUP9"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "DUP9"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "CALL"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "SWAP4"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "POP"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "POP"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "POP"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "POP"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1577,
											"end": 1604,
											"name": "POP"
										},
										{
											"begin": 518,
											"end": 519,
											"name": "POP"
										},
										{
											"begin": 518,
											"end": 519,
											"name": "POP"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "POP"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "POP"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "POP"
										},
										{
											"begin": 1077,
											"end": 1612,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "JUMPDEST"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "SWAP1"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "SLOAD"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "SWAP1"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "EXP"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "SWAP1"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "DIV"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "AND"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "DUP2"
										},
										{
											"begin": 318,
											"end": 346,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "JUMPDEST"
										},
										{
											"begin": 926,
											"end": 939,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 498,
											"end": 506,
											"name": "DUP1"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "DUP2"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "GT"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "ISZERO"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "JUMPI"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "INVALID"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "JUMPDEST"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "DUP1"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "SWAP1"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "SLOAD"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "SWAP1"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "EXP"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "SWAP1"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "DIV"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 489,
											"end": 494,
											"name": "AND"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "DUP2"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "GT"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "ISZERO"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "JUMPI"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "INVALID"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "JUMPDEST"
										},
										{
											"begin": 489,
											"end": 506,
											"name": "EQ"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "JUMPI"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "DUP1"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "REVERT"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "JUMPDEST"
										},
										{
											"begin": 973,
											"end": 1057,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1057,
											"name": "MLOAD"
										},
										{
											"begin": 973,
											"end": 1057,
											"name": "DUP1"
										},
										{
											"begin": 973,
											"end": 1057,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1057,
											"name": "ADD"
										},
										{
											"begin": 973,
											"end": 1057,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1057,
											"name": "MSTORE"
										},
										{
											"begin": 973,
											"end": 1057,
											"name": "DUP1"
										},
										{
											"begin": 1004,
											"end": 1012,
											"name": "DUP4"
										},
										{
											"begin": 973,
											"end": 1057,
											"name": "DUP2"
										},
										{
											"begin": 973,
											"end": 1057,
											"name": "MSTORE"
										},
										{
											"begin": 973,
											"end": 1057,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 973,
											"end": 1057,
											"name": "ADD"
										},
										{
											"begin": 1036,
											"end": 1045,
											"name": "CALLVALUE"
										},
										{
											"begin": 973,
											"end": 1057,
											"name": "DUP2"
										},
										{
											"begin": 973,
											"end": 1057,
											"name": "MSTORE"
										},
										{
											"begin": 973,
											"end": 1057,
											"name": "POP"
										},
										{
											"begin": 954,
											"end": 958,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 954,
											"end": 970,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 959,
											"end": 969,
											"name": "CALLER"
										},
										{
											"begin": 954,
											"end": 970,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 954,
											"end": 970,
											"name": "AND"
										},
										{
											"begin": 954,
											"end": 970,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 954,
											"end": 970,
											"name": "AND"
										},
										{
											"begin": 954,
											"end": 970,
											"name": "DUP2"
										},
										{
											"begin": 954,
											"end": 970,
											"name": "MSTORE"
										},
										{
											"begin": 954,
											"end": 970,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 954,
											"end": 970,
											"name": "ADD"
										},
										{
											"begin": 954,
											"end": 970,
											"name": "SWAP1"
										},
										{
											"begin": 954,
											"end": 970,
											"name": "DUP2"
										},
										{
											"begin": 954,
											"end": 970,
											"name": "MSTORE"
										},
										{
											"begin": 954,
											"end": 970,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 954,
											"end": 970,
											"name": "ADD"
										},
										{
											"begin": 954,
											"end": 970,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 954,
											"end": 970,
											"name": "KECCAK256"
										},
										{
											"begin": 954,
											"end": 1057,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 954,
											"end": 1057,
											"name": "DUP3"
										},
										{
											"begin": 954,
											"end": 1057,
											"name": "ADD"
										},
										{
											"begin": 954,
											"end": 1057,
											"name": "MLOAD"
										},
										{
											"begin": 954,
											"end": 1057,
											"name": "DUP2"
										},
										{
											"begin": 954,
											"end": 1057,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 954,
											"end": 1057,
											"name": "ADD"
										},
										{
											"begin": 954,
											"end": 1057,
											"name": "SSTORE"
										},
										{
											"begin": 954,
											"end": 1057,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 954,
											"end": 1057,
											"name": "DUP3"
										},
										{
											"begin": 954,
											"end": 1057,
											"name": "ADD"
										},
										{
											"begin": 954,
											"end": 1057,
											"name": "MLOAD"
										},
										{
											"begin": 954,
											"end": 1057,
											"name": "DUP2"
										},
										{
											"begin": 954,
											"end": 1057,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 954,
											"end": 1057,
											"name": "ADD"
										},
										{
											"begin": 954,
											"end": 1057,
											"name": "SSTORE"
										},
										{
											"begin": 954,
											"end": 1057,
											"name": "SWAP1"
										},
										{
											"begin": 954,
											"end": 1057,
											"name": "POP"
										},
										{
											"begin": 954,
											"end": 1057,
											"name": "POP"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "POP"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "POP"
										},
										{
											"begin": 869,
											"end": 1065,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "JUMPDEST"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "DUP1"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "SWAP1"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "SLOAD"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "SWAP1"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "EXP"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "SWAP1"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "DIV"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "AND"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "DUP2"
										},
										{
											"begin": 209,
											"end": 240,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "JUMPDEST"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "SLOAD"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "DUP2"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1620,
											"end": 1977,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 1620,
											"end": 1977,
											"name": "JUMPDEST"
										},
										{
											"begin": 1684,
											"end": 1696,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1732,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1722,
											"end": 1732,
											"name": "SLOAD"
										},
										{
											"begin": 1713,
											"end": 1718,
											"name": "DUP3"
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "GT"
										},
										{
											"begin": 1709,
											"end": 1773,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 1709,
											"end": 1773,
											"name": "JUMPI"
										},
										{
											"begin": 1756,
											"end": 1761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1761,
											"name": "SWAP1"
										},
										{
											"begin": 1749,
											"end": 1761,
											"name": "POP"
										},
										{
											"begin": 1749,
											"end": 1761,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 1749,
											"end": 1761,
											"name": "JUMP"
										},
										{
											"begin": 1709,
											"end": 1773,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 1709,
											"end": 1773,
											"name": "JUMPDEST"
										},
										{
											"begin": 1812,
											"end": 1813,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1814,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1787,
											"end": 1814,
											"name": "AND"
										},
										{
											"begin": 1787,
											"end": 1800,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1787,
											"end": 1800,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1800,
											"name": "SWAP1"
										},
										{
											"begin": 1787,
											"end": 1800,
											"name": "SLOAD"
										},
										{
											"begin": 1787,
											"end": 1800,
											"name": "SWAP1"
										},
										{
											"begin": 1787,
											"end": 1800,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1787,
											"end": 1800,
											"name": "EXP"
										},
										{
											"begin": 1787,
											"end": 1800,
											"name": "SWAP1"
										},
										{
											"begin": 1787,
											"end": 1800,
											"name": "DIV"
										},
										{
											"begin": 1787,
											"end": 1800,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1787,
											"end": 1800,
											"name": "AND"
										},
										{
											"begin": 1787,
											"end": 1814,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1787,
											"end": 1814,
											"name": "AND"
										},
										{
											"begin": 1787,
											"end": 1814,
											"name": "EQ"
										},
										{
											"begin": 1783,
											"end": 1886,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 1783,
											"end": 1886,
											"name": "JUMPI"
										},
										{
											"begin": 1864,
											"end": 1874,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1864,
											"end": 1874,
											"name": "SLOAD"
										},
										{
											"begin": 1831,
											"end": 1845,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1831,
											"end": 1860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1859,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1846,
											"end": 1859,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1846,
											"end": 1859,
											"name": "SWAP1"
										},
										{
											"begin": 1846,
											"end": 1859,
											"name": "SLOAD"
										},
										{
											"begin": 1846,
											"end": 1859,
											"name": "SWAP1"
										},
										{
											"begin": 1846,
											"end": 1859,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1846,
											"end": 1859,
											"name": "EXP"
										},
										{
											"begin": 1846,
											"end": 1859,
											"name": "SWAP1"
										},
										{
											"begin": 1846,
											"end": 1859,
											"name": "DIV"
										},
										{
											"begin": 1846,
											"end": 1859,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1846,
											"end": 1859,
											"name": "AND"
										},
										{
											"begin": 1831,
											"end": 1860,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1831,
											"end": 1860,
											"name": "AND"
										},
										{
											"begin": 1831,
											"end": 1860,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1831,
											"end": 1860,
											"name": "AND"
										},
										{
											"begin": 1831,
											"end": 1860,
											"name": "DUP2"
										},
										{
											"begin": 1831,
											"end": 1860,
											"name": "MSTORE"
										},
										{
											"begin": 1831,
											"end": 1860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1860,
											"name": "ADD"
										},
										{
											"begin": 1831,
											"end": 1860,
											"name": "SWAP1"
										},
										{
											"begin": 1831,
											"end": 1860,
											"name": "DUP2"
										},
										{
											"begin": 1831,
											"end": 1860,
											"name": "MSTORE"
										},
										{
											"begin": 1831,
											"end": 1860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1860,
											"name": "ADD"
										},
										{
											"begin": 1831,
											"end": 1860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1860,
											"name": "KECCAK256"
										},
										{
											"begin": 1831,
											"end": 1860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1874,
											"name": "DUP3"
										},
										{
											"begin": 1831,
											"end": 1874,
											"name": "DUP3"
										},
										{
											"begin": 1831,
											"end": 1874,
											"name": "SLOAD"
										},
										{
											"begin": 1831,
											"end": 1874,
											"name": "ADD"
										},
										{
											"begin": 1831,
											"end": 1874,
											"name": "SWAP3"
										},
										{
											"begin": 1831,
											"end": 1874,
											"name": "POP"
										},
										{
											"begin": 1831,
											"end": 1874,
											"name": "POP"
										},
										{
											"begin": 1831,
											"end": 1874,
											"name": "DUP2"
										},
										{
											"begin": 1831,
											"end": 1874,
											"name": "SWAP1"
										},
										{
											"begin": 1831,
											"end": 1874,
											"name": "SSTORE"
										},
										{
											"begin": 1831,
											"end": 1874,
											"name": "POP"
										},
										{
											"begin": 1783,
											"end": 1886,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 1783,
											"end": 1886,
											"name": "JUMPDEST"
										},
										{
											"begin": 1909,
											"end": 1914,
											"name": "DUP2"
										},
										{
											"begin": 1896,
											"end": 1906,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1896,
											"end": 1914,
											"name": "DUP2"
										},
										{
											"begin": 1896,
											"end": 1914,
											"name": "SWAP1"
										},
										{
											"begin": 1896,
											"end": 1914,
											"name": "SSTORE"
										},
										{
											"begin": 1896,
											"end": 1914,
											"name": "POP"
										},
										{
											"begin": 1941,
											"end": 1947,
											"name": "DUP3"
										},
										{
											"begin": 1925,
											"end": 1938,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1925,
											"end": 1938,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1947,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1925,
											"end": 1947,
											"name": "EXP"
										},
										{
											"begin": 1925,
											"end": 1947,
											"name": "DUP2"
										},
										{
											"begin": 1925,
											"end": 1947,
											"name": "SLOAD"
										},
										{
											"begin": 1925,
											"end": 1947,
											"name": "DUP2"
										},
										{
											"begin": 1925,
											"end": 1947,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1925,
											"end": 1947,
											"name": "MUL"
										},
										{
											"begin": 1925,
											"end": 1947,
											"name": "NOT"
										},
										{
											"begin": 1925,
											"end": 1947,
											"name": "AND"
										},
										{
											"begin": 1925,
											"end": 1947,
											"name": "SWAP1"
										},
										{
											"begin": 1925,
											"end": 1947,
											"name": "DUP4"
										},
										{
											"begin": 1925,
											"end": 1947,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1925,
											"end": 1947,
											"name": "AND"
										},
										{
											"begin": 1925,
											"end": 1947,
											"name": "MUL"
										},
										{
											"begin": 1925,
											"end": 1947,
											"name": "OR"
										},
										{
											"begin": 1925,
											"end": 1947,
											"name": "SWAP1"
										},
										{
											"begin": 1925,
											"end": 1947,
											"name": "SSTORE"
										},
										{
											"begin": 1925,
											"end": 1947,
											"name": "POP"
										},
										{
											"begin": 1965,
											"end": 1969,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1958,
											"end": 1969,
											"name": "SWAP1"
										},
										{
											"begin": 1958,
											"end": 1969,
											"name": "POP"
										},
										{
											"begin": 1620,
											"end": 1977,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 1620,
											"end": 1977,
											"name": "JUMPDEST"
										},
										{
											"begin": 1620,
											"end": 1977,
											"name": "SWAP3"
										},
										{
											"begin": 1620,
											"end": 1977,
											"name": "SWAP2"
										},
										{
											"begin": 1620,
											"end": 1977,
											"name": "POP"
										},
										{
											"begin": 1620,
											"end": 1977,
											"name": "POP"
										},
										{
											"begin": 1620,
											"end": 1977,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"auctionEnd()": "2a24f46c",
							"bid(bytes32)": "957bb1e0",
							"changeState(uint8)": "268f1153",
							"highestBid()": "d57bde79",
							"highestBidder()": "91f90157",
							"reveal(uint256,bytes32)": "4036778f",
							"state()": "c19d93fb",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"auctionEnd\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"blindBid\",\"type\":\"bytes32\"}],\"name\":\"bid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum BlindAuction.Phase\",\"name\":\"x\",\"type\":\"uint8\"}],\"name\":\"changeState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"highestBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"highestBidder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"secret\",\"type\":\"bytes32\"}],\"name\":\"reveal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum BlindAuction.Phase\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Auction.sol\":\"BlindAuction\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Auction.sol\":{\"keccak256\":\"0xc79e30e163d134c40dc061d7b798a0b82d63c9017345567ab36ffbefd989b8d8\",\"urls\":[\"bzz-raw://7d9e9ac0b26f4914d6da580945ba4a94d932eea057b91d8c1d8f37cd9c2384a7\",\"dweb:/ipfs/QmUGdd3nsCuPXBvdJkiznJKMqi6ofq3pzRubAqCi2uQPYK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "Auction.sol:BlindAuction",
								"label": "state",
								"offset": 0,
								"slot": "0",
								"type": "t_enum(Phase)11"
							},
							{
								"astId": 17,
								"contract": "Auction.sol:BlindAuction",
								"label": "beneficiary",
								"offset": 1,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 21,
								"contract": "Auction.sol:BlindAuction",
								"label": "bids",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_struct(Bid)6_storage)"
							},
							{
								"astId": 23,
								"contract": "Auction.sol:BlindAuction",
								"label": "highestBidder",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 26,
								"contract": "Auction.sol:BlindAuction",
								"label": "highestBid",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 30,
								"contract": "Auction.sol:BlindAuction",
								"label": "depositReturns",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Phase)11": {
								"encoding": "inplace",
								"label": "enum BlindAuction.Phase",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Bid)6_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct BlindAuction.Bid)",
								"numberOfBytes": "32",
								"value": "t_struct(Bid)6_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Bid)6_storage": {
								"encoding": "inplace",
								"label": "struct BlindAuction.Bid",
								"members": [
									{
										"astId": 3,
										"contract": "Auction.sol:BlindAuction",
										"label": "blindedBid",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 5,
										"contract": "Auction.sol:BlindAuction",
										"label": "deposit",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"Auction.sol": {
				"ast": {
					"absolutePath": "Auction.sol",
					"exportedSymbols": {
						"BlindAuction": [
							259
						]
					},
					"id": 260,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 259,
							"linearizedBaseContracts": [
								259
							],
							"name": "BlindAuction",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "BlindAuction.Bid",
									"id": 6,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "blindedBid",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 6,
											"src": "90:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "90:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "deposit",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 6,
											"src": "119:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "119:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Bid",
									"nodeType": "StructDefinition",
									"scope": 259,
									"src": "68:71:0",
									"visibility": "public"
								},
								{
									"canonicalName": "BlindAuction.Phase",
									"id": 11,
									"members": [
										{
											"id": 7,
											"name": "Init",
											"nodeType": "EnumValue",
											"src": "169:4:0"
										},
										{
											"id": 8,
											"name": "Bidding",
											"nodeType": "EnumValue",
											"src": "175:7:0"
										},
										{
											"id": 9,
											"name": "Reveal",
											"nodeType": "EnumValue",
											"src": "184:6:0"
										},
										{
											"id": 10,
											"name": "Done",
											"nodeType": "EnumValue",
											"src": "192:4:0"
										}
									],
									"name": "Phase",
									"nodeType": "EnumDefinition",
									"src": "147:56:0"
								},
								{
									"constant": false,
									"functionSelector": "c19d93fb",
									"id": 15,
									"name": "state",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 259,
									"src": "209:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Phase_$11",
										"typeString": "enum BlindAuction.Phase"
									},
									"typeName": {
										"contractScope": null,
										"id": 12,
										"name": "Phase",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 11,
										"src": "209:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Phase_$11",
											"typeString": "enum BlindAuction.Phase"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"id": 13,
											"name": "Phase",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 11,
											"src": "230:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_Phase_$11_$",
												"typeString": "type(enum BlindAuction.Phase)"
											}
										},
										"id": 14,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "Init",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "230:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Phase_$11",
											"typeString": "enum BlindAuction.Phase"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 17,
									"name": "beneficiary",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 259,
									"src": "249:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 16,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "249:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 21,
									"name": "bids",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 259,
									"src": "283:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bid_$6_storage_$",
										"typeString": "mapping(address => struct BlindAuction.Bid)"
									},
									"typeName": {
										"id": 20,
										"keyType": {
											"id": 18,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "291:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "283:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bid_$6_storage_$",
											"typeString": "mapping(address => struct BlindAuction.Bid)"
										},
										"valueType": {
											"contractScope": null,
											"id": 19,
											"name": "Bid",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 6,
											"src": "300:3:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bid_$6_storage_ptr",
												"typeString": "struct BlindAuction.Bid"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "91f90157",
									"id": 23,
									"name": "highestBidder",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 259,
									"src": "318:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 22,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "318:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d57bde79",
									"id": 26,
									"name": "highestBid",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 259,
									"src": "353:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 24,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "353:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 25,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "378:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 30,
									"name": "depositReturns",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 259,
									"src": "388:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 29,
										"keyType": {
											"id": 27,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "396:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "388:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 28,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "405:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "470:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_Phase_$11",
																"typeString": "enum BlindAuction.Phase"
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 35,
																"name": "state",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "489:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Phase_$11",
																	"typeString": "enum BlindAuction.Phase"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 36,
																"name": "reqPhase",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "498:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Phase_$11",
																	"typeString": "enum BlindAuction.Phase"
																}
															},
															"src": "489:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 34,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															277,
															278
														],
														"referencedDeclaration": 277,
														"src": "481:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "481:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "481:26:0"
											},
											{
												"id": 40,
												"nodeType": "PlaceholderStatement",
												"src": "518:1:0"
											}
										]
									},
									"documentation": null,
									"id": 42,
									"name": "validPhase",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"name": "reqPhase",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 42,
												"src": "454:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Phase_$11",
													"typeString": "enum BlindAuction.Phase"
												},
												"typeName": {
													"contractScope": null,
													"id": 31,
													"name": "Phase",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 11,
													"src": "454:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$11",
														"typeString": "enum BlindAuction.Phase"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "453:16:0"
									},
									"src": "434:93:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "562:65:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 45,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "581:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "581:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 47,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "595:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "581:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															277,
															278
														],
														"referencedDeclaration": 277,
														"src": "573:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "573:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "573:34:0"
											},
											{
												"id": 51,
												"nodeType": "PlaceholderStatement",
												"src": "618:1:0"
											}
										]
									},
									"documentation": null,
									"id": 53,
									"name": "onlyBeneficiary",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "559:2:0"
									},
									"src": "535:92:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "656:79:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 56,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "671:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 57,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "685:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "685:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "671:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "671:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 61,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "706:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$11",
															"typeString": "enum BlindAuction.Phase"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 62,
															"name": "Phase",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "714:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Phase_$11_$",
																"typeString": "type(enum BlindAuction.Phase)"
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Bidding",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "714:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$11",
															"typeString": "enum BlindAuction.Phase"
														}
													},
													"src": "706:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$11",
														"typeString": "enum BlindAuction.Phase"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "706:21:0"
											}
										]
									},
									"documentation": null,
									"id": 67,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "646:2:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "656:0:0"
									},
									"scope": 259,
									"src": "635:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "796:61:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_Phase_$11",
														"typeString": "enum BlindAuction.Phase"
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 74,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "810:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$11",
															"typeString": "enum BlindAuction.Phase"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 75,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "814:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$11",
															"typeString": "enum BlindAuction.Phase"
														}
													},
													"src": "810:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 80,
												"nodeType": "IfStatement",
												"src": "807:22:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 77,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																279,
																280
															],
															"referencedDeclaration": 279,
															"src": "821:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "821:8:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 79,
													"nodeType": "ExpressionStatement",
													"src": "821:8:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 81,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "840:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$11",
															"typeString": "enum BlindAuction.Phase"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 82,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "848:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Phase_$11",
															"typeString": "enum BlindAuction.Phase"
														}
													},
													"src": "840:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$11",
														"typeString": "enum BlindAuction.Phase"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "840:9:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "268f1153",
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 72,
											"modifierName": {
												"argumentTypes": null,
												"id": 71,
												"name": "onlyBeneficiary",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 53,
												"src": "780:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "780:15:0"
										}
									],
									"name": "changeState",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 86,
												"src": "764:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Phase_$11",
													"typeString": "enum BlindAuction.Phase"
												},
												"typeName": {
													"contractScope": null,
													"id": 68,
													"name": "Phase",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 11,
													"src": "764:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$11",
														"typeString": "enum BlindAuction.Phase"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "763:9:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:0:0"
									},
									"scope": 259,
									"src": "743:114:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "941:124:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 95,
															"name": "bids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "954:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bid_$6_storage_$",
																"typeString": "mapping(address => struct BlindAuction.Bid storage ref)"
															}
														},
														"id": 98,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 96,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "959:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "959:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "954:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bid_$6_storage",
															"typeString": "struct BlindAuction.Bid storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 100,
																"name": "blindBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 88,
																"src": "1004:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 101,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "1036:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1036:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 99,
															"name": "Bid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 6,
															"src": "973:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Bid_$6_storage_ptr_$",
																"typeString": "type(struct BlindAuction.Bid storage pointer)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"blindedBid",
															"deposit"
														],
														"nodeType": "FunctionCall",
														"src": "973:84:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bid_$6_memory",
															"typeString": "struct BlindAuction.Bid memory"
														}
													},
													"src": "954:103:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bid_$6_storage",
														"typeString": "struct BlindAuction.Bid storage ref"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "954:103:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "957bb1e0",
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 91,
														"name": "Phase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "926:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Phase_$11_$",
															"typeString": "type(enum BlindAuction.Phase)"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Bidding",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "926:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$11",
														"typeString": "enum BlindAuction.Phase"
													}
												}
											],
											"id": 93,
											"modifierName": {
												"argumentTypes": null,
												"id": 90,
												"name": "validPhase",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 42,
												"src": "915:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Phase_$11_$",
													"typeString": "modifier (enum BlindAuction.Phase)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "915:25:0"
										}
									],
									"name": "bid",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"name": "blindBid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 107,
												"src": "882:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 87,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "882:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "881:18:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "941:0:0"
									},
									"scope": 259,
									"src": "869:196:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "1153:459:0",
										"statements": [
											{
												"assignments": [
													119
												],
												"declarations": [
													{
														"constant": false,
														"id": 119,
														"name": "refund",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 170,
														"src": "1164:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 118,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1164:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 121,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1178:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1164:15:0"
											},
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"name": "bidToCheck",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 170,
														"src": "1194:22:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bid_$6_storage_ptr",
															"typeString": "struct BlindAuction.Bid"
														},
														"typeName": {
															"contractScope": null,
															"id": 122,
															"name": "Bid",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 6,
															"src": "1194:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bid_$6_storage_ptr",
																"typeString": "struct BlindAuction.Bid"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 128,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 124,
														"name": "bids",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "1219:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Bid_$6_storage_$",
															"typeString": "mapping(address => struct BlindAuction.Bid storage ref)"
														}
													},
													"id": 127,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 125,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "1224:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1224:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1219:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bid_$6_storage",
														"typeString": "struct BlindAuction.Bid storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1194:41:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 129,
															"name": "bidToCheck",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 123,
															"src": "1254:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bid_$6_storage_ptr",
																"typeString": "struct BlindAuction.Bid storage pointer"
															}
														},
														"id": 130,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "blindedBid",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1254:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 134,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 109,
																		"src": "1306:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 135,
																		"name": "secret",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "1313:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 132,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "1289:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1289:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1289:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 131,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 268,
															"src": "1279:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1279:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1254:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 161,
												"nodeType": "IfStatement",
												"src": "1250:303:0",
												"trueBody": {
													"id": 160,
													"nodeType": "Block",
													"src": "1323:230:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 139,
																	"name": "refund",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "1342:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 140,
																		"name": "bidToCheck",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 123,
																		"src": "1352:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bid_$6_storage_ptr",
																			"typeString": "struct BlindAuction.Bid storage pointer"
																		}
																	},
																	"id": 141,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "deposit",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5,
																	"src": "1352:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1342:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 143,
															"nodeType": "ExpressionStatement",
															"src": "1342:28:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 144,
																		"name": "bidToCheck",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 123,
																		"src": "1393:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bid_$6_storage_ptr",
																			"typeString": "struct BlindAuction.Bid storage pointer"
																		}
																	},
																	"id": 145,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "deposit",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 5,
																	"src": "1393:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 146,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 109,
																	"src": "1415:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1393:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 159,
															"nodeType": "IfStatement",
															"src": "1389:149:0",
															"trueBody": {
																"id": 158,
																"nodeType": "Block",
																"src": "1422:116:0",
																"statements": [
																	{
																		"condition": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 149,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 274,
																						"src": "1458:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 150,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": null,
																					"src": "1458:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 151,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 109,
																					"src": "1470:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 148,
																				"name": "placeBid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 212,
																				"src": "1449:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) returns (bool)"
																				}
																			},
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1449:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 157,
																		"nodeType": "IfStatement",
																		"src": "1445:73:0",
																		"trueBody": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 155,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 153,
																					"name": "refund",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 119,
																					"src": "1503:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "-=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"id": 154,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 109,
																					"src": "1513:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1503:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 156,
																			"nodeType": "ExpressionStatement",
																			"src": "1503:15:0"
																		}
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 167,
															"name": "refund",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "1597:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 162,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "1577:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1577:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1577:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1577:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "1577:27:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "4036778f",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 114,
														"name": "Phase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1139:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Phase_$11_$",
															"typeString": "type(enum BlindAuction.Phase)"
														}
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Reveal",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1139:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$11",
														"typeString": "enum BlindAuction.Phase"
													}
												}
											],
											"id": 116,
											"modifierName": {
												"argumentTypes": null,
												"id": 113,
												"name": "validPhase",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 42,
												"src": "1128:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Phase_$11_$",
													"typeString": "modifier (enum BlindAuction.Phase)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1128:24:0"
										}
									],
									"name": "reveal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 171,
												"src": "1093:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1093:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"name": "secret",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 171,
												"src": "1105:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 110,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1092:28:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1153:0:0"
									},
									"scope": 259,
									"src": "1077:535:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "1698:279:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 180,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "1713:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 181,
														"name": "highestBid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1722:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1713:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 186,
												"nodeType": "IfStatement",
												"src": "1709:64:0",
												"trueBody": {
													"id": 185,
													"nodeType": "Block",
													"src": "1734:39:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1756:5:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 179,
															"id": 184,
															"nodeType": "Return",
															"src": "1749:12:0"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 187,
														"name": "highestBidder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "1787:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1804:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 188,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1804:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1804:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1787:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 200,
												"nodeType": "IfStatement",
												"src": "1783:103:0",
												"trueBody": {
													"id": 199,
													"nodeType": "Block",
													"src": "1816:70:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 193,
																		"name": "depositReturns",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 30,
																		"src": "1831:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 195,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 194,
																		"name": "highestBidder",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "1846:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1831:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 196,
																	"name": "highestBid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 26,
																	"src": "1864:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1831:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 198,
															"nodeType": "ExpressionStatement",
															"src": "1831:43:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 201,
														"name": "highestBid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1896:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 202,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "1909:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1896:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "1896:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 205,
														"name": "highestBidder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "1925:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 206,
														"name": "bidder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "1941:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1925:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "1925:22:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1965:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 179,
												"id": 210,
												"nodeType": "Return",
												"src": "1958:11:0"
											}
										]
									},
									"documentation": null,
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "placeBid",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"name": "bidder",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 212,
												"src": "1638:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 212,
												"src": "1654:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1654:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1637:28:0"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 212,
												"src": "1684:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1684:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1683:14:0"
									},
									"scope": 259,
									"src": "1620:357:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "2012:172:0",
										"statements": [
											{
												"assignments": [
													216
												],
												"declarations": [
													{
														"constant": false,
														"id": 216,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 243,
														"src": "2026:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 215,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2026:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 221,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 217,
														"name": "depositReturns",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2040:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 220,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 218,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "2055:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2055:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2040:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2026:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 223,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "2086:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2095:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2086:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 222,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															277,
															278
														],
														"referencedDeclaration": 277,
														"src": "2077:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2077:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 227,
												"nodeType": "ExpressionStatement",
												"src": "2077:20:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 228,
															"name": "depositReturns",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2108:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 231,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 229,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "2123:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2123:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2108:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 232,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2137:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2108:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "2108:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 240,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "2169:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 235,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "2149:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2149:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2149:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2149:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "2149:27:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3ccfd60b",
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2002:2:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2012:0:0"
									},
									"scope": 259,
									"src": "1985:199:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "2248:51:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 254,
															"name": "highestBid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "2280:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 251,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "2259:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2259:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2259:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "2259:32:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "2a24f46c",
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 247,
														"name": "Phase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "2236:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Phase_$11_$",
															"typeString": "type(enum BlindAuction.Phase)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Done",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "2236:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Phase_$11",
														"typeString": "enum BlindAuction.Phase"
													}
												}
											],
											"id": 249,
											"modifierName": {
												"argumentTypes": null,
												"id": 246,
												"name": "validPhase",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 42,
												"src": "2225:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Phase_$11_$",
													"typeString": "modifier (enum BlindAuction.Phase)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2225:22:0"
										}
									],
									"name": "auctionEnd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2215:2:0"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:0:0"
									},
									"scope": 259,
									"src": "2196:103:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 260,
							"src": "37:2265:0"
						}
					],
					"src": "0:2302:0"
				},
				"id": 0
			}
		}
	}
}